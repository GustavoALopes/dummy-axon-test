version: '3.8'

networks:
  local:
    driver: bridge

volumes:
  postgres-data:
  mongodb_data:
#  axonserver-data:
#  axonserver-events:
#  axonserver-config:
  rabbitmq_data:
  rabbitmq_log:
  prometheus_data:
  grafana_data:

services:
  database:
    image: postgres:16.6-alpine
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: bike_rent
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - local

  rent-database:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "5001:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: secret
    depends_on:
      - rent-database

  broker:
    image: rabbitmq:4.0.3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: secret
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    networks:
      - local

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - local

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - local

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # Jaeger gRPC
      - "6831:6831/udp" # Jaeger Thrift UDP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: unless-stopped
    networks:
      - local

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
#      - "55680:55680" # gRPC for legacy clients
    volumes:
      - ./otel-collector-config.yml:/etc/otel/config.yml
    command: [ "--config", "/etc/otel/config.yml" ]
    networks:
      - local


#  axon-server:
#    image: axoniq/axonserver:latest
#    container_name: axon-server
#    hostname: axon-server
#    restart: always
#    ports:
#      - "8024:8024"
#      - "8124:8124"
#    volumes:
#      - axonserver-data:/axonserver/data
#      - axonserver-events:/axonserver/events
#      - axonserver-config:/axonserver/config
#    networks:
#      - local